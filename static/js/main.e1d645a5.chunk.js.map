{"version":3,"sources":["serviceWorker.js","components/React/question/Question.js","components/React/answer/Answer.js","components/QuizMainReact.js","components/Angular/question/Question.js","components/Angular/answer/Answer.js","components/QuizMainAngular.js","components/Exports/ExportReact.js","components/Exports/ExportAngular.js","components/Exports/ExportVue.js","components/Vue/question/Question.js","components/Vue/answer/Answer.js","components/QuizMainVue.js","index.js"],"names":["Boolean","window","location","hostname","match","ReactQuestion","props","question","ReactAnswer","answers","Object","keys","answer","map","qAnswer","i","className","correctAnswer","clickedAnswer","onClick","checkAnswer","key","disabled","QuizReact","state","questions","1","2","3","4","5","6","correctAnswers","step","score","setState","nextStep","this","length","to","Component","AngularQuestion","AngularAnswer","QuizAngular","SelectGame","SelectGame2","SelectGame3","VueQuestion","VueAnswer","QuizVue","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e1d645a5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport '../../../Styles/Question.css';\n\nconst ReactQuestion = (props) => {\n    return (\n        <h1>{props.question}</h1>\n    );\n}\n\nexport default ReactQuestion;","import React from 'react';\nimport '../../../Styles/Answer.css';\n\nconst ReactAnswer = (props) => {\n    let answers = Object.keys(props.answer)\n        .map((qAnswer, i) => (\n            <li\n            className=\n            {\n                props.correctAnswer === qAnswer ?\n                'correct' : \n                props.clickedAnswer === qAnswer ? \n                'incorrect' : ''\n            }\n            onClick={() => props.checkAnswer(qAnswer)}\n            key={qAnswer}>\n                {props.answer[qAnswer]}\n            </li>\n        ));\n\n        return (\n            <>\n                <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\n                    {answers}\n                </ul>\n            </>\n        );\n}\n\nexport default ReactAnswer;","import React, {Component} from 'react';\nimport ReactQuestion from './React/question/Question';\nimport ReactAnswer from './React/answer/Answer';\nimport { Link } from 'react-router-dom';\nimport '.././Styles/QuizMain.css';\n\nexport default class QuizReact extends Component {\n\n    state = {\n        questions: {\n            1: 'When was ReactJS initially released?',\n            2: 'Who is the original author of ReactJS?',\n            3: 'Who maintains ReactJS?',\n            4: 'ReactJS is written in...',\n            5: 'What is JSX?',\n            6: 'JS expressions are used inside of JSX with...'\n        },\n        answers: {\n            1: {\n                1: '2011',\n                2: '2012',\n                3: '2013'\n            },\n            2: {\n                1: 'Jordan Walke',\n                2: 'Steve Jobs',\n                3: 'Mark Zuckerberg'\n            },\n            3: {\n                1: 'Twitter and community',\n                2: 'Facebook and community',\n                3: 'Community'\n            },\n            4: {\n                1: 'PHP',\n                2: 'JavaScript',\n                3: 'HTML'\n            },\n            5: {\n                1: 'Joomla XML',\n                2: 'Java XML',\n                3: 'JavaScript XML'\n            },\n            6: {\n                1: '{  }',\n                2: '(  )',\n                3: '[  ]'\n            }\n        },\n        correctAnswers: {\n            1: '3',\n            2: '1',\n            3: '2',\n            4: '2',\n            5: '3',\n            6: '1'\n        },\n        correctAnswer: 0,\n        clickedAnswer: 0,\n        step: 1,\n        score: 0\n    }\n\n    // Checks if the answer is correct\n    checkAnswer = answer => {\n        const { correctAnswers, step, score } = this.state;\n        if(answer === correctAnswers[step]){\n            this.setState({\n                score: score + 1,\n                correctAnswer: correctAnswers[step],\n                clickedAnswer: answer\n            });\n        }else{\n            this.setState({\n                correctAnswer: 0,\n                clickedAnswer: answer\n            });\n        }\n    }\n\n    // To the next question\n    nextStep = (step) => {\n        this.setState({\n            step: step + 1,\n            correctAnswer: 0,\n            clickedAnswer: 0\n        });\n    }\n\n    render(){\n        let { questions, answers, correctAnswer, clickedAnswer, step, score } = this.state;\n        return(\n            <div className=\"Content\">\n                {step <= Object.keys(questions).length ? \n                    (<>\n                        <ReactQuestion\n                            question={questions[step]}\n                        />\n                        <p>Question number {this.state.step} out of {Object.keys(questions).length}</p>\n                        <ReactAnswer\n                            answer={answers[step]}\n                            step={step}\n                            checkAnswer={this.checkAnswer}\n                            correctAnswer={correctAnswer}\n                            clickedAnswer={clickedAnswer}\n                        />\n                        <button\n                        className=\"NextStep\"\n                        disabled={\n                            clickedAnswer && Object.keys(questions).length >= step\n                            ? false : true\n                        }\n                        onClick={() => this.nextStep(step)}>Next</button>\n                    </>) : (\n                        <div className=\"finalPage\">\n                            <h1>You have completed the quiz!</h1>\n                            <p>Your score is: {score} of {Object.keys(questions).length}</p>\n                        </div>\n                    )\n                }\n                <br/>\n                 <Link to=\"/react-quiz/\" className=\"board-link\"><button className='goBack'>Go back</button></Link>\n            </div>\n\n            \n        );\n    }\n}","import React from 'react';\nimport '../../../Styles/Question.css';\n\nconst AngularQuestion = (props) => {\n    return (\n        <h1>{props.question}</h1>\n    );\n}\n\nexport default AngularQuestion;","import React from 'react';\nimport '../../../Styles/Answer.css';\n\nconst AngularAnswer = (props) => {\n    let answers = Object.keys(props.answer)\n        .map((qAnswer, i) => (\n            <li\n            className=\n            {\n                props.correctAnswer === qAnswer ?\n                'correct' : \n                props.clickedAnswer === qAnswer ? \n                'incorrect' : ''\n            }\n            onClick={() => props.checkAnswer(qAnswer)}\n            key={qAnswer}>\n                {props.answer[qAnswer]}\n            </li>\n        ));\n\n        return (\n            <>\n                <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\n                    {answers}\n                </ul>\n            </>\n        );\n}\n\nexport default AngularAnswer;","import React, {Component} from 'react';\nimport AngularQuestion from './Angular/question/Question';\nimport AngularAnswer from './Angular/answer/Answer';\nimport { Link } from 'react-router-dom';\nimport '.././Styles/QuizMain.css';\n\nexport default class QuizAngular extends Component {\n\n    state = {\n        questions: {\n            1: 'When was AngularJS initially released?',\n            2: 'Who developed AngularJS?',\n            3: 'AngularJS is written in...',\n            4: 'In 2012 Angular team built an extension for Chrome called...',\n            5: 'Which components can be injected as a dependency in AngularJS?',\n            6: 'What is MVC?'\n        },\n        answers: {\n            1: {\n                1: '2010',\n                2: '2011',\n                3: '2012'\n            },\n            2: {\n                1: 'Facebook',\n                2: 'Google',\n                3: 'Twitter'\n            },\n            3: {\n                1: 'JavaScript',\n                2: 'TypeCript',\n                3: 'PHP'\n            },\n            4: {\n                1: 'Bumerang',\n                2: 'Bataling',\n                3: 'Batarang'\n            },\n            5: {\n                1: 'Constant',\n                2: 'Application Module',\n                3: 'Factory'\n            },\n            6: {\n                1: 'A software technique to optimize web application performance',\n                2: 'Name of an algorithm',\n                3: 'A software design pattern for developing web applications'\n            }\n        },\n        correctAnswers: {\n            1: '1',\n            2: '2',\n            3: '1',\n            4: '3',\n            5: '2',\n            6: '3'\n        },\n        correctAnswer: 0,\n        clickedAnswer: 0,\n        step: 1,\n        score: 0\n    }\n\n    // Checks if the answer is correct\n    checkAnswer = answer => {\n        const { correctAnswers, step, score } = this.state;\n        if(answer === correctAnswers[step]){\n            this.setState({\n                score: score + 1,\n                correctAnswer: correctAnswers[step],\n                clickedAnswer: answer\n            });\n        }else{\n            this.setState({\n                correctAnswer: 0,\n                clickedAnswer: answer\n            });\n        }\n    }\n\n    // To the next question\n    nextStep = (step) => {\n        this.setState({\n            step: step + 1,\n            correctAnswer: 0,\n            clickedAnswer: 0\n        });\n    }\n\n    render(){\n        let { questions, answers, correctAnswer, clickedAnswer, step, score } = this.state;\n        return(\n            <div className=\"Content\">\n                {step <= Object.keys(questions).length ? \n                    (<>\n                        <AngularQuestion\n                            question={questions[step]}\n                        />\n                        <p>Question number {this.state.step} out of {Object.keys(questions).length}</p>\n                        <AngularAnswer\n                            answer={answers[step]}\n                            step={step}\n                            checkAnswer={this.checkAnswer}\n                            correctAnswer={correctAnswer}\n                            clickedAnswer={clickedAnswer}\n                        />\n                        <button\n                        className=\"NextStep\"\n                        disabled={\n                            clickedAnswer && Object.keys(questions).length >= step\n                            ? false : true\n                        }\n                        onClick={() => this.nextStep(step)}>Next</button>\n                    </>) : (\n                        <div className=\"finalPage\">\n                            <h1>You have completed the quiz!</h1>\n                            <p>Your score is: {score} of {Object.keys(questions).length}</p>\n                        </div>\n                    )\n                }\n                <br/>\n                <Link to=\"/react-quiz/\" className=\"board-link\"><button className='goBack'>Go back</button></Link>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport '../../Styles/QuizMain.css';\nimport { Link } from 'react-router-dom';\n\n\nexport default class SelectGame extends Component {\n\n    render() {\n        return (\n            <Link to=\"/react-quiz/react\" className='selectButton'>\n            <button className=\"btn\">React</button>\n             </Link>\n        );\n    }\n}","import React, {Component} from 'react';\nimport '../../Styles/QuizMain.css';\nimport { Link } from 'react-router-dom';\n\n\nexport default class SelectGame2 extends Component {\n\n    render() {\n        return (\n            <Link to=\"/react-quiz/angular\" className='selectButton'>\n            <button className=\"btn\">Angular</button>\n            </Link>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport '../../Styles/QuizMain.css';\nimport { Link } from 'react-router-dom';\n\n\nexport default class SelectGame3 extends Component {\n\n    render() {\n        return (\n            <Link to=\"/react-quiz/vue\" className='selectButton'>\n            <button className=\"btn\">Vue.js</button>\n            </Link>\n        );\n    }\n}\n\n","import React from 'react';\nimport '../../../Styles/Question.css';\n\nconst VueQuestion = (props) => {\n    return (\n        <h1>{props.question}</h1>\n    );\n}\n\nexport default VueQuestion;","import React from 'react';\nimport '../../../Styles/Answer.css';\n\nconst VueAnswer = (props) => {\n    let answers = Object.keys(props.answer)\n        .map((qAnswer, i) => (\n            <li\n            className=\n            {\n                props.correctAnswer === qAnswer ?\n                'correct' : \n                props.clickedAnswer === qAnswer ? \n                'incorrect' : ''\n            }\n            onClick={() => props.checkAnswer(qAnswer)}\n            key={qAnswer}>\n                {props.answer[qAnswer]}\n            </li>\n        ));\n\n        return (\n            <>\n                <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\n                    {answers}\n                </ul>\n            </>\n        );\n}\n\nexport default VueAnswer;","import React, {Component} from 'react';\nimport VueQuestion from './Vue/question/Question';\nimport VueAnswer from './Vue/answer/Answer';\nimport { Link } from 'react-router-dom';\nimport '.././Styles/QuizMain.css';\n\nexport default class QuizVue extends Component {\n\n    state = {\n        questions: {\n            1: 'When was Vue.js initially released?',\n            2: 'Who is the original author of ReactJS?',\n            3: 'What is Vue.js?',\n            4: 'Vue.js is written in...',\n            5: 'What is JSX?',\n            6: 'JS expressions are used inside of JSX with...'\n        },\n        answers: {\n            1: {\n                1: '2013',\n                2: '2014',\n                3: '2015'\n            },\n            2: {\n                1: 'Jordan Walke',\n                2: 'Evan You',\n                3: 'Mark Zuckerberg'\n            },\n            3: {\n                1: 'A library',\n                2: 'A database',\n                3: 'A framework'\n            },\n            4: {\n                1: 'PHP and JavaScript',\n                2: 'PHP and TypeScript',\n                3: 'TypeScript and JavaScript'\n            },\n            5: {\n                1: 'JavaScript XML',\n                2: 'Java XML',\n                3: 'Joomla XML'\n            },\n            6: {\n                1: '{  }',\n                2: '(  )',\n                3: '[  ]'\n            }\n        },\n        correctAnswers: {\n            1: '2',\n            2: '2',\n            3: '3',\n            4: '3',\n            5: '1',\n            6: '1'\n        },\n        correctAnswer: 0,\n        clickedAnswer: 0,\n        step: 1,\n        score: 0\n    }\n\n    // Checks if the answer is correct\n    checkAnswer = answer => {\n        const { correctAnswers, step, score } = this.state;\n        if(answer === correctAnswers[step]){\n            this.setState({\n                score: score + 1,\n                correctAnswer: correctAnswers[step],\n                clickedAnswer: answer\n            });\n        }else{\n            this.setState({\n                correctAnswer: 0,\n                clickedAnswer: answer\n            });\n        }\n    }\n\n    // To the next question\n    nextStep = (step) => {\n        this.setState({\n            step: step + 1,\n            correctAnswer: 0,\n            clickedAnswer: 0\n        });\n    }\n\n    render(){\n        let { questions, answers, correctAnswer, clickedAnswer, step, score } = this.state;\n        return(\n            <div className=\"Content\">\n                {step <= Object.keys(questions).length ? \n                    (<>\n                        <VueQuestion\n                            question={questions[step]}\n                        />\n                        <p>Question number {this.state.step} out of {Object.keys(questions).length}</p>\n                        <VueAnswer\n                            answer={answers[step]}\n                            step={step}\n                            checkAnswer={this.checkAnswer}\n                            correctAnswer={correctAnswer}\n                            clickedAnswer={clickedAnswer}\n                        />\n                        <button\n                        className=\"NextStep\"\n                        disabled={\n                            clickedAnswer && Object.keys(questions).length >= step\n                            ? false : true\n                        }\n                        onClick={() => this.nextStep(step)}>Next</button>\n                    </>) : (\n                        <div className=\"finalPage\">\n                            <h1>You have completed the quiz!</h1>\n                            <p>Your score is: {score} of {Object.keys(questions).length}</p>\n                        </div>\n                    )\n                }\n                <br/>\n                <Link to=\"/react-quiz/\" className=\"board-link\"><button className='goBack'>Go back</button></Link>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './Styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport QuizReact from './components/QuizMainReact';\nimport QuizAngular from './components/QuizMainAngular';\nimport SelectGame from './components/Exports/ExportReact';\nimport SelectGame2 from './components/Exports/ExportAngular';\nimport SelectGame3 from './components/Exports/ExportVue';\nimport QuizVue from './components/QuizMainVue';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route exact path=\"/react-quiz/\" component={SelectGame}/>\n    <Route path=\"/react-quiz/react\" component={QuizReact}/>\n    <Route exact path=\"/react-quiz/\" component={SelectGame2}/>\n    <Route path=\"/react-quiz/angular\" component={QuizAngular}/>\n    <Route exact path=\"/react-quiz/\" component={SelectGame3}/>\n    <Route path=\"/react-quiz/vue\" component={QuizVue}/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}